<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 引入配置文件 -->
<mapper namespace="com.wgq.chat.contact.dao.ContactDao">

    <insert id="insert">
        <if test="contact != null">
            <trim suffix="(" prefix=")" suffixOverrides=",">
                <if test="contact.id != null">
                    id,
                </if>
                <if test="contact.userId != null">
                    user_id,
                </if>
                <if test="contact.friendId != null">
                    friend_id,
                </if>
                <if test="contact.applyTime != null">
                    apply_time,
                </if>
                <if test="contact.auditTime != null">
                    audit_time,
                </if>
            </trim>
            <trim prefix="values (" suffix=")" suffixOverrides=",">
                <if test="contact.id != null">
                    #{contact.id},
                </if>
                <if test="contact.userId != null">
                    #{contact.userId},
                </if>
                <if test="contact.friendId != null">
                    #{contact.friendId},
                </if>
                <if test="contact.applyTime != null">
                    #{contact.applyTime},
                </if>
                <if test="contact.auditTime != null">
                    #{contact.auditTime},
                </if>
            </trim>
        </if>
    </insert>
    <update id="refreshOrCreateActiveTime">
        insert into contact(`room_id`,`sender_user_id`,`reply_message_id`,`active_time`)
        values
        <foreach collection="memberUserList" item="userId" separator=",">
            (#{roomId},#{userId},#{messageId},#{activeTime})
        </foreach>
        on DUPLICATE KEY UPDATE
        `last_msg_id`=VALUES(last_msg_id),
        `active_time`=VALUES(active_time)
    </update>
    <delete id="removeById">
        delete from contact where id = #{id}
    </delete>
    <select id="findContact" resultType="com.wgq.chat.contact.po.Contact">
        select * from cotact where user_id = #{userId} and friend_id = #{friendId}
--         select * from cotact where user_id = #{userId} and friend_id = #{friendId} or (user_id = #{friendId} and friend_id = #{userId})
    </select>

    <select id="getMyContact" resultType="com.wgq.chat.contact.po.Contact">
        select * from contact where user_id = #{userId}
    </select>
</mapper>
